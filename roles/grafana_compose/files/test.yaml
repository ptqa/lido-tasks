# This is the main input for unit testing.
# Only this file is passed as a command-line argument.

rule_files:
  - prom-rules.yaml
  - prom-docker-rules.yaml
  - prom-loki-rules.yaml
  - prom-tail-rules.yaml

evaluation_interval: 1m

tests:
  - interval: 1m
    input_series:
      - series: 'node_vmstat_pgmajfault{instance="localhost:9100"}'
        values: '0+120000x10'
      - series: 'node_uname_info{instance="localhost:9100", nodename="localhost"}'
        values: '1x10'

    # Unit test for the "HostMemoryUnderMemoryPressure" alerting rule.
    alert_rule_test:
      - eval_time: 9m
        alertname: HostMemoryUnderMemoryPressure
        exp_alerts:
          - exp_labels:
              severity: warning
              instance: localhost:9100
              nodename: localhost
            exp_annotations:
              summary: "Host memory under memory pressure (instance localhost:9100)"
              description: "The node is under heavy memory pressure. High rate of major page faults\n  VALUE = 2000\n  LABELS = map[instance:localhost:9100 nodename:localhost]"

  - interval: 1m
    input_series:
      - series: 'node_memory_MemAvailable_bytes{instance="localhost:9100"}'
        values: '12000-1000x10'
      - series: 'node_memory_MemTotal_bytes{instance="localhost:9100"}'
        values: '100000x10'
      - series: 'node_uname_info{instance="localhost:9100", nodename="localhost"}'
        values: '1x10'

    # Unit test for the "HostOutOfMemory" alerting rule.
    alert_rule_test:
      # No alert at minute 4
      - eval_time: 4m
        alertname: HostOutOfMemory
        exp_alerts:
      # Alert after hiting <10% for 2 minutes
      - eval_time: 5m
        alertname: HostOutOfMemory
        exp_alerts:
          - exp_labels:
              severity: warning
              instance: localhost:9100
              nodename: localhost
            exp_annotations:
              summary: Host out of memory (instance localhost:9100)
              description: "Node memory is filling up (< 10% left)\n  VALUE = 7.000000000000001\n  LABELS = map[instance:localhost:9100 nodename:localhost]"

  - interval: 1m
    input_series:
      - series: 'node_cpu_seconds_total{mode="user", instance="localhost:9100"}'
        values: '0+60x30'
      - series: 'node_uname_info{instance="localhost:9100", nodename="localhost"}'
        values: '1x30'

    # Unit test for the "HostHighCpuLoad" alerting rule.
    alert_rule_test:
      - eval_time: 10m
        alertname: HostHighCpuLoad
        exp_alerts:
      - eval_time: 20m
        alertname: HostHighCpuLoad
        exp_alerts:
          - exp_labels:
              severity: warning
              instance: localhost:9100
              nodename: localhost
            exp_annotations:
              summary: Host high CPU load (instance localhost:9100)
              description: "CPU load is > 80%\n  VALUE = 1\n  LABELS = map[instance:localhost:9100 nodename:localhost]"

  - interval: 1m
    input_series:
      - series: 'node_disk_read_bytes_total{instance="localhost:9100"}'
        values: '0+10000000000x20'
      - series: 'node_uname_info{instance="localhost:9100", nodename="localhost"}'
        values: '1x20'

    # Unit test for the "HostUnusualDiskReadRate" alerting rule.
    alert_rule_test:
      - eval_time: 4m
        alertname: HostUnusualDiskReadRate
        exp_alerts:
      - eval_time: 10m
        alertname: HostUnusualDiskReadRate
        exp_alerts:
          - exp_labels:
              severity: warning
              instance: localhost:9100
              nodename: localhost
            exp_annotations:
              summary: Host unusual disk read rate (instance localhost:9100)
              description: "Disk is probably reading too much data (> 50 MB/s)\n  VALUE = 158.94571940104166\n  LABELS = map[instance:localhost:9100 nodename:localhost]"

  - interval: 1m
    input_series:
      - series: 'node_disk_written_bytes_total{instance="localhost:9100"}'
        values: '0+10000000000x20'
      - series: 'node_uname_info{instance="localhost:9100", nodename="localhost"}'
        values: '1x20'

    # Unit test for the "HostUnusualDiskWriteRate" alerting rule.
    alert_rule_test:
      - eval_time: 5m
        alertname: HostUnusualDiskWriteRate
        exp_alerts:
          - exp_labels:
              severity: warning
              instance: localhost:9100
              nodename: localhost
            exp_annotations:
              summary: Host unusual disk write rate (instance localhost:9100)
              description: "Disk is probably writing too much data (> 50 MB/s)\n  VALUE = 158.94571940104166\n  LABELS = map[instance:localhost:9100 nodename:localhost]"

  - interval: 1m
    input_series:
      - series: 'container_last_seen{instance="cadvisor:8080"}'
        values: '1 stale'

    # Unit test for the "ContainerAbsent" alerting rule.
    alert_rule_test:
      - eval_time: 9m
        alertname: ContainerAbsent
        exp_alerts:
          - exp_labels:
              severity: warning
            exp_annotations:
              summary: Container absent (instance )
              description: "A container is absent for 5 min\n  VALUE = 1\n  LABELS = map[]"

  - interval: 1m
    input_series:
      - series: 'loki_panic_total{instance="localhost:3100", job="docker", namespace="default"}'
        values: '1+1x20'

    # Unit test for the "LokiRequestPanic" alerting rule.
    alert_rule_test:
      - eval_time: 15m
        alertname: LokiRequestPanic
        exp_alerts:
          - exp_labels:
              severity: critical
              job: docker
              namespace: default
            exp_annotations:
              summary: Loki request panic (instance )
              description: "The docker is experiencing 10.00% increase of panics\n  VALUE = 10\n  LABELS = map[job:docker namespace:default]"
